/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.8.0-M1'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.8.0-M1'
    testImplementation group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.0-alpha1'


    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.8.0-M1'

    // This dependency is used by the application.
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.0-alpha1'
    implementation 'com.google.guava:guava:29.0-jre'
    implementation group: 'log4j', name: 'log4j', version: '1.2.17'
    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '4.4.1'
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.0.0-beta-3'
}

application {
    // Define the main class for the application.
    mainClass = 'workshop.selenium.java.App'
}

test{
    // Use junit platform for unit tests.
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    testLogging {
        events "passed", "skipped", "failed"
    }
}